# shell profile stuff common to bash and zsh

export EDITOR="vim"
export GIT_EDITOR="vim"
export GEM_EDITOR="vim"
export _JAVA_AWT_WM_NONREPARENTING=1
export PATH=$HOME/bin:bundler/bin:/opt/node/bin:$PATH
export PATH=$HOME/.tmuxifier/bin:$PATH
export TMUXIFIER_LAYOUT_PATH="$HOME/.tmux-layouts"

export ERL_AFLAGS="-kernel shell_history enabled"

if [[ -s "$HOME/.shell_profile.local" ]]
then
  source "$HOME/.shell_profile.local"
fi
if [[ -s "$HOME/.shell_profile.private" ]]
then
  source "$HOME/.shell_profile.private"
fi
if [[ -s "$HOME/.aliases" ]]
then
  source "$HOME/.aliases"
fi

# Auto-screen invocation. see: http://taint.org/wk/RemoteLoginAutoScreen
# if we're coming from a remote SSH connection, in an interactive session
# then automatically put us into a screen(1) session.   Only try once
# -- if $STARTED_SCREEN is set, don't try it again, to avoid looping
# if screen fails for some reason.
if [ "$PS1" != "" -a "${STARTED_SCREEN:-x}" = x -a "${SSH_TTY:-x}" != x ]
then
  STARTED_SCREEN=1 ; export STARTED_SCREEN
  [ -d $HOME/lib/screen-logs ] || mkdir -p $HOME/lib/screen-logs
  sleep 1
  screen -RR && exit 0
  # normally, execution of this rc script ends here...
  echo "Screen failed! continuing with normal bash startup"
fi
# [end of auto-screen snippet]

# git command to pull all the branches down
gitpullall() {
  for remote in `git branch -r`; do git branch --track $remote; done
}

# e.g. find_commit test | xargs git show
find_commit() {
  git rev-list HEAD -- . |
  while read rev; do
    if git show -p $rev | grep $1 >/dev/null; then
      echo $rev
    fi
  done
}

export GPG_TTY=$(tty)
export PATH="/usr/local/bin:/bin:/usr/sbin:/sbin:/usr/bin:/opt/X11/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"
export PATH="/usr/local/opt/python/libexec/bin:$PATH"
export PATH="$HOME/.rbenv/shims:$HOME/.rbenv/bin:$PATH"

export MANPATH="/usr/local/man:$MANPATH"

eval "$(thefuck --alias)"
eval "$(rbenv init -)"
